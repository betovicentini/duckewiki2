<?php
include_once '../../includes_pl/db_connect.php';
include_once '../../includes_pl/functions.php';
sec_session_start();
readConfig(); // user colors, 
/*
 * to-do:
 * 
Tabela 'Localidades & Plots'
select * from loc where nome = 'Parque Nacional do Jaú'
11948
select * from locpai where loc=11948
pai=1587 (Novo Airão)

select * from locpai where loc=1587
pai=1400 (RIO NEGRO)

select * from locpai where loc=1400
pai=890,908
apagar id=938 (pai=890)

select * from loc where id in (890,908)
890 "METROPOLITANA DE CURITIBA"
908 "NORTE AMAZONENSE"

Erro ao importar no R, deve ter uma região RIO NEGRO no Paraná...

 * 
 * . corrigir o filtro 'e.id'
 * . caixinhas para marcar
 * . - marcar todos filtrados
 * . - exportar filtrados (csv)
 * . gerar filtro (filtros dinâmicos e estáticos)
 * 	- filtro inclui esp e/ou pl, salvo no servidor (din e est)
 * link direto para as variáveis inseridas na tabela de main
 * 
 * addPl
 * - não tem coletor, só coletores (marcada por)
 * - coords da localidade (abre e fecha)
 * - coords da planta (x, y...)
 * 
 * . bib copiar/colar bibtex http://jpe.oxfordjournals.org/citmgr?type=bibtex&gca=jpe%3Brtt073v1
 * // primeiro valor é o bibkey (PK) (incluindo o espaço!)
@article{de Oliveira29012014,
author = {de Oliveira, Alexandre A. and Vicentini, Alberto and Chave, Jerome and Castanho, Camila de T. and Davies, Stuart J. and Martini, Adriana M. Z. and Lima, Renato A. F. and Ribeiro, Ricardo R. and Iribar, Amaia and Souza, Vinicius C.}, 
title = {Habitat specialization and phylogenetic structure of tree species in a coastal Brazilian white-sand forest},
year = {2014}, 
doi = {10.1093/jpe/rtt073}, 
abstract ={Aims The coastal Brazilian rainforest on white-sand (restinga) ranks among the most fragmented forest types in the tropics, owing to both the patchy distribution of sandy soils and widespread coastal development activities. Here we study the environmental and evolutionary determinants of a forest tree assemblage at a single restinga forest in Southeastern Brazil. We also explore the ability of competing hypotheses to explain the maintenance of species diversity in this forest type, which includes contrasting extremes of edaphic conditions associated with flooding stress.Methods The study was conducted in a white-sand forest permanent plot of 10.24 ha on the coastal plain of Southeastern Brazil. This plot was divided into 256 quadrats of 20×20 m, which were classified into two main edaphic habitats (flooded and drained). Trees with a diameter ≥1cm at breast height were identified. We assembled DNA sequence data for each of the 116 morphospecies recognized using two chloroplast markers (rbcL and matK). A phylogenetic tree was obtained using the maximum likelihood method, and a phylogenetic distance matrix was produced from an ultrametric tree. We analyzed similarity in floristic composition and structure between habitats and related them to cross-plot distances using permutation procedures. Null model torus shift simulations were performed to obtain a statistical significance level for habitat association for each species. The phylogenetic structure for the two habitats and for each 20×20 m quadrat was calculated using the mean phylogenetic distance weighted by species abundance and checked for significance using the standardized effect size generated by 5000 randomizations of phylogenetic tip labels.Important Findings Our results indicate that partitioning among edaphic habitats is important for explaining species distributions and coexistence in restinga forests. Species distributions within the plot were found to be non-random: there was greater floristic similarity within than between habitats, and >40% of the more abundant species were positively or negatively associated with at least one habitat. Patterns of habitat association were not independent of phylogenetic relatedness: the community was overdispersed with respect to space and habitat type. Closely related species tended to occur in different habitats, while neighboring trees tended to belong to more distantly related species. We conclude that habitat specialization is important for the coexistence of species in restinga forests and that habitat heterogeneity is therefore an essential factor in explaining the maintenance of diversity of this unique but fragile and threatened type of forest.}, 
URL = {http://jpe.oxfordjournals.org/content/early/2014/01/28/jpe.rtt073.abstract}, 
eprint = {http://jpe.oxfordjournals.org/content/early/2014/01/28/jpe.rtt073.full.pdf+html}, 
journal = {Journal of Plant Ecology} 
}
 * 
 * - coleção = soma dos especímenes depositados em diferentes herbários
 * 
 * . alter table det add sugest varchar(1)
 * 
 * - ao clicar *, clicar abaixo da tabela (limit 10) não oculta o menu
 * 
 * Menu
	Estático [X itens marcados]
		Adicionar estes N itens à marcação
		Remover estes N itens da marcação
		Limpar filtro (tem certeza?)
		salvar marcados como filtro
		mostrar marcados -> funciona, mas não está RESTful
		desmarcar todos
	Dinâmico [filtro dinâmico]
		Adicionar filtro à seleção
		Limpar filtro (tem certeza?)
 *
 * . táxon: morfotipo (sp para baixo): published (padrão)/not published
 * : link para dados do MOBOT / 2nd IPNI
 * : Idades: Crown Node (MA) / Stem Node (MA)
 * : obrigatórios até autor + published + validade
 * 
 * 
 * vernacular -> vernlink: pl, esp, tax -> vern (comentar fora o atual)
 * 
 * local: tipo adicionar parcela -> StartX etc
 * se parcela tem parcela como pai, startx e y obrigatórios
 * toda parcela dimx e y | diam obrigatŕios
 * 
 * keys: tipo: +cor +
 * : indumento: tipo, densidade e tamanho
 * : nome, tipo, definição e classe obrigatórios
 * seleção múltipla para categóricas, medida para quant.
 * add semi-quantitativa
 * 
 * forms: mudar a unidade de medida
 * 
 * . bib: bibkey = text e colocar em textarea, colando atualiza o resto
 * . tirar filenameorig
 * 
 * hab: adicionar local (quando marcado local)
 * 
 * pl: nome do censo (opcional) e data (obrigatório) a mesma para o formulário inteiro
 * 
 * esp: depósito em vários herbários (cada um com número não obrigatório)
 * 
 * fazer filtro a partir de var/val (estático)
 * 
 * Importar: GPS, Imagens, NIR, Esp+Pl
 * 
 * GPS se número do waypoint é igual ao número do coletor na mesma data, faz a ligação da coordenada
 * 
 * NIR: Prepara planilha (col num + nome do arquivo); importa dados
 * : pl ou esp
 * 
 * 
 * >>>>>>>>>>> guardar tabela em cache, ex. quando clicar alternadamente entre Checklist e Especímenes
 * 
 * . colocar o foco no txt ao abrir o build_mm
 * . sumir com o tooltip quando mover o mouse em outros lugares
 * . mmAdd() não está passando o valor do title
 * ? duplo-clique no build_mm jogar de um lado pro outro (UM JÁ FOI... outro em conflito com herbs add tomb)
 * . começar o filtro em build_mm NÃO DEVERIA começar a edição
 * ? nas versões de nome longo, não começar do próprio local, e sim do pai imediato
 * . quando ordena por coluna nas tabelas principais, a tabela some da URL
 * . COLOCAR BORDA AMARELA OU VERMELHA (PRETA) no botão da tabela selecionada
 * . editar taxon 1, especialista -> Pedro Viana (title = Federated States of Micronesia)
 * 					sinônimos -> Fabaceae (title = Cayman Islands)
 * . passar </head> para junto de <body> (depois de pullCfg) em todos os addX.php
 * . ano ficando com NaN (por causa do refill?)
 * . acessar botões do alto sem o menu
 * ? em alguns addX.php, entra no modo de edição só de blur o primeiro campo! (addPess: corrigido)
 * - opções das variáveis categóricas devem ser ordenáveis
 * - colorir melhor o botão na barra de menus, ao invés de circular com o preto (ou engrossar o preto?)
 * - F5 em novo táxon recupera o táxon pai mas esvazia o selrank
 * - novo táxon editar deve mostrar rank mesmo sem pai
 * - acessar botões do alto sem o mouse
 * - pegar todos os endereços dos includes e mensagens de erro de uma única constante
 * - store(sel) sendo chamado após updateStd(who), quando este já chama aquele (funcoes.js.mmselStdDown)
 * - acrescentar cores de edição (fundo e botão Salvar) em Config
 * - editar ao clicar em alguma variável no formulário
 * - Marcar três cores da corola -> se havia uma cor antes, ela continua no campo val, cores novas vão para valt
 * 		certo seria novas irem para valt e antiga sumir de val; e se edição deixar apenas 1, devem sumir de valt
 * 		e essa 1 voltar para val?
 * - ou campo múltiplo devia usar sempre valt, para simplificar? (Parece BEM melhor)
 * . 1) renomear chkbox de chk99 para chk99[]
 * . 2) tratar array em functions.php.insereUm
 * - olhar onde usa $row e $row2, e se $row2 é mesmo necessário
 * - "expandir tudo" visível apenas se número de Fieldsets > 1
 * - variáveis GET guardadas no SESSION, tirar !!
 * 
 * - Planta marcada
 *   1) se já estava salva, muda as variáveis php para preencher automaticamente os campos
 *   2) se editar/excluir, chamar AJAX para atualizar os campos correspondentes
 *   3) caso haja dados da planta, mostrar com 'lightgreen' e manter hid vazio (para não afetar o post)
 * 
 * - Desvantagem em manter a janela aberta após inserção: confunde o usuário? Melhor solução: abrir, ordenar por !id e atualizar tabela na tela principal?
 * 
 * - se clicar num controle que não seja o próximo input, mostrar bem grande "use o TAB para mudar de campos [ |<--- --->| ]" (por 2-3 segundos?)
 * - ao fechar o build_mm ou build_cmb, passar o focus() pro próximo input
 * - addEsp: não está saindo do txtnummax usando shift+tab (vai pra frente! -> txtnummaxblur())
 * 
 * - mudar todas as siglas de col para colet (coletor) para não confundir com coluna (col)
 * 
 * - quando edita a data de monitoramento das variáveis, já deveria entrar no modo de edição?
 * 
 * - FALTANDO TABID EM DWH !!!

 * - addEsp.herbs -> herbários inseridos antes ficam com título diferente dos recém-inseridos
 * - cmb não está puxando dados de getLocFull (que tem que ser getFull)
 * - cmb também não deve levar pro modo edição antes de realmente mudar o item selecionado
 * - usar SHIFT para ordenar por mais de uma coluna
 * ? ordernar campos numéricos como número, não como texto
 * ? tirar ';' de $mmValStd e similares em build_mm.php (e em qualquer outro lugar) - substituir por chineses / NÃO PRECISA TIRAR TUDO!!
 * - quando novo táxon vem com Storage, está ficando marrom (cor de edição)
 * We also used coalesce(). When a value can be NULL then it's good practice to use the coalesce() function, otherwise the concatenation will result in a NULL value too.
 * http://rachbelaid.com/postgres-full-text-search-is-good-enough/
 * - conferir onde eu uso string_agg() e array_agg()
 * - usar ts_vector/to_tsquery (cria lexemas, ou raízes das palavras, tirando os sufixos variáveis: CANTar, CANTou, CANTei -> 'cant')
 * 

http://www.postgresql.org/docs/current/interactive/indexes-intro.html
But you might have to run the ANALYZE command regularly to update statistics to allow the query planner to make educated decisions.

After an index is created, the system has to keep it synchronized with the table. This adds overhead to data manipulation operations. Therefore indexes that are seldom or never used in queries should be removed
> DEVEMOS SABER QUAIS PESQUISAS SÃO MAIS COMUNS

* especimenes do Brasil = Brasil + sublocais
* idem pros taxons Lauraceae = milhares de esp

with recursive filhos as (
	select id, nome, rank, taxpai
	from tax
	where id = 7 -- Lauraceae
	union
	select a.id, a.nome, a.rank, a.taxpai
	from tax a
	join filhos f on (a.taxpai = f.id)
)
select * from filhos


with recursive conta (id, taxpai, root_id) as (
    select  t1.id,
            t1.taxpai,
            t1.id as root_id
    from    tax t1
    union all
    select  t2.id,
            t2.taxpai,
            c.root_id
    from    tax t2
    join    conta c on c.id = t2.taxpai
)
select      root_id,(count(*)-1) as n -- sem incluir o pai
from        conta
where       root_id=7
group by    root_id;

ou

with recursive conta (id, taxpai, root_id) as (
    select  t1.id,
            t1.taxpai,
            t1.id as root_id
    from    tax t1
    union all
    select  t2.id,
            t2.taxpai,
            c.root_id
    from    tax t2
    join    conta c on c.id = t2.taxpai
)
select      root_id,count(*) as n -- inclui o pai
from        conta
where       root_id=7
group by    root_id;



with recursive conta (id, nome, taxpai, root_id) as (
    select  t1.id,t1.nome,
            t1.taxpai,
            t1.id as root_id
    from    tax t1
    union all
    select  t2.id,t2.nome,
            t2.taxpai,
            c.root_id
    from    tax t2
    join    conta c on c.id = t2.taxpai
)
select      c.*,count(e.*) esp_n -- sem incluir o pai
from        conta c
join det d on d.tax = c.id
join esp e on e.det = d.id
where       root_id=7
group by c.id,c.nome,c.taxpai,c.root_id

retorna:
7;Lauraceae;;7;12
1587;Ocotea;7;7;5
1593;Aniba;7;7;2
1594;Endlicheria;7;7;3
1671;Aiouea;7;7;1
2188;Nectandra;7;7;1
2942;Dicypellium;7;7;1
2943;Mezilaurus;7;7;1
3904;aciphylla;1587;7;2
3924;esmeraldana;1587;7;26
3929;gracilis;1587;7;1
3930;guianensis;1587;7;3
3935;longifolia;1587;7;4
3943;obliqua;1587;7;2
3949;puberula;1587;7;2
3956;schomburgkiana;1587;7;2
4283;burchellii;1593;7;1
4290;hostmanniana;1593;7;1
4292;lancifolia;1593;7;2
4293;megaphylla;1593;7;1
4295;panurensis;1593;7;4
4296;parviflora;1593;7;1
4299;riparia;1593;7;1
4301;santalodora;1593;7;1
4307;arenosa;1594;7;5
4315;coriacea;1594;7;2
4318;dysodantha;1594;7;1
8173;martiniana;1941;7;1
8178;puchury-major;1941;7;1
12089;sp. 1;1587;7;1
12122;sp.2;1587;7;4
14114;filiformis;2939;7;13
16985;sp.1;1587;7;1
17217;sp.1;1593;7;1
17228;caudata;1587;7;1
17268;sp.1;2188;7;2


with recursive conta (id, nome, taxpai, root_id) as (
    select  t1.id,t1.nome,
            t1.taxpai,
            t1.id as root_id
    from    tax t1
    union all
    select  t2.id,t2.nome,
            t2.taxpai,
            c.root_id
    from    tax t2
    join    conta c on c.id = t2.taxpai
)
select sum(esp_n) from (
select      c.*,count(e.*) esp_n -- sem incluir o pai
from        conta c
join det d on d.tax = c.id
join esp e on e.det = d.id
where       root_id=7
group by c.id,c.nome,c.taxpai,c.root_id) as tabela

retorna:
113

Função, pois:

CREATE OR REPLACE FUNCTION getespn_tax(tax_id integer)
  RETURNS int AS
$BODY$
with recursive conta (id, nome, taxpai, root_id) as (
    select  t1.id,t1.nome,
            t1.taxpai,
            t1.id as root_id
    from    tax t1
    union all
    select  t2.id,t2.nome,
            t2.taxpai,
            c.root_id
    from    tax t2
    join    conta c on c.id = t2.taxpai
)
select sum(esp_n)::int from (
select      c.*,count(e.*) esp_n -- sem incluir o pai
from        conta c
join det d on d.tax = c.id
join esp e on e.det = d.id
where       root_id=tax_id
group by c.id,c.nome,c.taxpai,c.root_id) as tabela
$BODY$
  LANGUAGE sql STABLE
  COST 100;
ALTER FUNCTION getespn_tax(integer)
  OWNER TO postgres;

select id,nome,rank,valido,getespn_tax(id) from tax
where taxpai is null
order by id
limit 100

VEREDITO: inviável. Solução: acrescentar coluna nesp e npl em tax, atualizar sempre que editar, e rodar scripts de conferência de madrugada, às vezes (ou diariamente)




ITENS para chamar a atenção:
* Otimização do SQL, aproveitando técnicas recentes: permite gerar tabelas dinâmicas carregadas em pouco tempo, ao invés de estáticas que ainda demoram pra carregar
* Uso do Storage para armazenar informações do usuário (recuperar informações após uma queda de energia, p.ex.)
* Otimização da comunicação entre servidor/cliente: pacotes pequenos, AJAX para não recarregar toda a página após pequenas mudanças
* Divisão do processamento entre cliente (javascript) e servidor (php): poupa recursos do servidor, pensando no aumento considerável no número de usuários
* Evitar ao máximo o uso de frameworks e bibliotecas de terceiros.
* Esquemas hierárquicos: táxon -> táxon filho; local1+local2 -> local filho...
* Esquemas hierárquicos: "adjacency list model" vs. "modified preorder tree traversal algorithm"


-- listar as tabelas e número de linhas de cada (fazer um ANALYZE antes)
SELECT 
  nspname AS schemaname,relname,reltuples
FROM pg_class C
LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)
WHERE 
  nspname NOT IN ('pg_catalog', 'information_schema') AND
  relkind='r' 
ORDER BY reltuples DESC;


Caracteres chineses usados para não misturar com ' " | / , ; etc
件 separa itens numa lista
号 separa um id de outro número/código no mesmo item
示 separa a parte invisível (id+número/código) da parte visível (texto)

 * 
 */
/** lê os arquivos com as strings do idioma atual e joga na memória (php session) */
function leDic($idioma) {
	$arquivo = 'lang/lang_'.$idioma;
	$csvFile = file($arquivo);
	foreach ($csvFile as $line) {
		$pos = strpos($line,'=');
		$antes = substr($line,0,$pos);
		$depois = substr($line,$pos+1,-1);
		$_SESSION[$antes] = $depois;
	}
	$arquivo = 'lang/alias_'.$idioma;
	$csvFile = file($arquivo);
	foreach ($csvFile as $line) {
		$pos = strpos($line,'=');
		$antes = 'ALIAS:'.substr($line,0,$pos);
		$depois = substr($line,$pos+1,-1);
		$_SESSION[$antes] = $depois;
	}
}
/** cria/lê variável da sessão PHP */
function getVarSession($nome,$default) {
	// primeiro vê se tem no $_GET (se tiver, copia pro $_SESSION)
	if (isset($_GET[$nome]) and !empty($_GET[$nome])) { //and in_array($_GET[$nome],$validValues)
		$_SESSION[$nome] = $_GET[$nome];
		return($_GET[$nome]);
	} else
	// se não tem no $_GET, vê se tem no $_SESSION
	if (isset($_SESSION[$nome])) {
		return($_SESSION[$nome]);
	} else {
	// se não tem em lugar nenhum, pega o valor $default (e copia pro $_SESSION)
		$_SESSION[$nome] = $default;
		return($default);
	}
}
/** pega variável do $_GET, sem envolver a sessão */
function getVarNoSession($nome,$default) {
    if (isset($_GET[$nome]) and !empty($_GET[$nome])) { //and in_array($_GET[$nome],$validValues)
        return($_GET[$nome]);
    } else { // Default
        return($default);
    }
}
$lang = getVarSession('lang','BR');
leDic($lang);
$table = getVarSession('table','none');
$sort = getVarNoSession('sort','none');
$nomeCor = getVarNoSession('nomeCor','');
$cor = getVarNoSession('cor','');
$offset = getVarNoSession('offset','0');
$limit = getVarNoSession('limit','100');
?>
<!DOCTYPE html>
<html lang='BR' style='overflow-x:hidden;overflow-y:hidden'>
<head>
<meta charset='UTF-8'>
<?php echo "<title>".txt('title')."</title>"; ?>
<script src='js/funcoes.js'></script>
<script type='text/javascript'>
var tabAtiva = null; // sendo usado?
var sortedVar = null; // sendo usado?
var timeOutID = null;
/** usado no update1() e no update4() */
function blurMsg() {
	var div = document.getElementById('divMsg');
	div.style.display = 'none';
	timeOutID = null;
}
/** MUDAR ESSES NOMES PARA ALGO SIGNIFICATIVO! */
function update1() { // atualiza e mostra o resultado numa janela MSG (que desaparece após 1 segundo)
    if (HttpReq.readyState == 4 && HttpReq.status == 200) {
        var spn = document.getElementById('spnSelCount');
        var btn = document.getElementById('btnExport');
        var pos = HttpReq.responseText.indexOf(',');
        var selCount = HttpReq.responseText.substr(0,pos);
        if (selCount < 2) {
			spn.innerHTML = selCount+' selecionado';
		} else {
			spn.innerHTML = selCount+' selecionados';
		}
        btn.disabled = selCount < 1;
        var div = document.getElementById(divUpd);
        div.innerHTML = "";
        div.innerHTML = HttpReq.responseText.substr(pos+1);
        div.style.display = 'block';
        if (timeOutID != null) {
			window.clearTimeout(timeOutID);
		}
        timeOutID = window.setTimeout(blurMsg,1000);
    } else {
        if (HttpReq.readyState == 4) {
            alert("Erro: " + HttpReq.statusText);
        }
    }
}
function update2() {
    if (HttpReq.readyState == 4 && HttpReq.status == 200) {
        var div = document.getElementById(divUpd);
        div.innerHTML = "";
        div.innerHTML = HttpReq.responseText;
		document.location.reload(true); // força o reload do servidor
    } else {
        if (HttpReq.readyState == 4) {
            alert("Erro: " + HttpReq.statusText);
        }
    }
}
var colsStd = '';
var xUpd3=0, yUpd3=0;
function update3() { // atualiza e mostra o resultado numa janela MSG
	if (HttpReq.readyState == 4 && HttpReq.status == 200) {
		var pos = HttpReq.responseText.indexOf(']');
		colsStd = HttpReq.responseText.substr(1,pos-1);
		var div = document.getElementById(divUpd);
		div.innerHTML = HttpReq.responseText.substr(pos+1);
		div.style.left = xUpd3+'px';
		div.style.top = yUpd3+'px';
		div.name = 'divCols';
		div.style.display = 'block';
	} else {
		if (HttpReq.readyState == 4) {
			alert("Erro: " + HttpReq.statusText);
		}
	}
}
function update4() { // atualiza e mostra o resultado numa janela MSG (que desaparece após 1 segundo)
	if (HttpReq.readyState == 4 && HttpReq.status == 200) {
		var div = document.getElementById(divUpd);
		div.innerHTML = "";
		div.innerHTML = HttpReq.responseText;
		div.style.display = 'block';
		if (timeOutID != null) {
			window.clearTimeout(timeOutID);
		}
		timeOutID = window.setTimeout(blurMsg,1000);
	} else {
		if (HttpReq.readyState == 4) {
			alert("Erro: " + HttpReq.statusText);
		}
	}
}
function updateMOBOTpage() {
    if (HttpReq.readyState == 4 && HttpReq.status == 200) {
		// testar se HttpReq.responseText é só número !!
		window.open('http://tropicos.org/Name/'+HttpReq.responseText);
    } else {
        if (HttpReq.readyState == 4) {
            alert("Erro: " + HttpReq.statusText);
        }
    }
}
function changeLang(who,table,sorted,offset,limit) {
	var F = document.getElementById('frmLang');
	addHidden(F,'table',table);
	addHidden(F,'sort',sorted);
	addHidden(F,'offset',offset);
	addHidden(F,'limit',limit);
	addHidden(F,'lang',who.value);
	/*var ww, wwCount=0;
	for (var i=0; i<localStorage.length; i++) {
		if (localStorage.key(i).substr(0,2) == 'ww') {
			wwCount++;
			ww = localStorage.getItem(localStorage.key(i));
			window.open(ww.name,ww.name);
		}
	}
	//alert(wwCount);
	//localStorage.setItem(wwCount+1,ww.name);
	//alert(openedWindows.length);
	/*for (var i=0; i<openedWindows.length; i++) {
		openedWindows[i].location.reload(true);
		alert(openedWindows[i].name);
	}*/
	F.submit();
}
function mudaoffset(atual,maximo) {
	var offset = prompt("Pular quantas linhas (máximo "+maximo+")?", atual);
	if (offset) {
		if (offset > maximo) {
			offset = maximo;
		} else
		if (offset < 0) {
			offset = 0;
		}
		if (offset != atual) {
			document.getElementById('btnOffset').value = offset;
			return true;
		} else {
			return false;
		}
	} else {
		return false;
	}
}
function mudalimite(atual,maximo) {
	var limit = prompt("Exibir quantas linhas (máximo "+maximo+")?", atual);
	if (limit) {
		if (limit > maximo) {
			limit = maximo;
		} else
		if (limit < 1) {
			limit = 1;
		}
		if (limit != atual) {
			document.getElementById('btnLimit').value = limit;
			return true;
		} else {
			return false;
		}
	} else {
		return false;
	}
}
function taxEdit(id) {
	clearLocalStore('frmTax');
	callAdd('addTax.php?edit='+id,800,0,1,1);
}
function taxMobot(nome) {
	var url = 'getMOBOTpage.php?nome='+nome;
	conecta(url,updateMOBOTpage);
}
function espEdit(id) {
	clearLocalStore('frmEsp');
	callAdd('addEsp.php?edit='+id,800,0,1,1);
}
function plEdit(id) {
	clearLocalStore('frmPl');
	callAdd('addPl.php?edit='+id,800,0,1,1);
}
function locEdit(id) {
	clearLocalStore('frmLoc');
	callAdd('addLoc.php?edit='+id,800,0,1,1);
}
function anyEdit(tab,id) {
	tab = tab.substr(0,1).toUpperCase()+tab.substr(1);
	clearLocalStore('frm'+tab);
	callAdd('add'+tab+'.php?edit='+id,800,0,1,1); // h = 0 -> automática
}
function handlePopupResult(id,who,texto) {
	location.reload(true); // true: carrega do servidor, atualiza as mudanças feitas na janela que chamou esta função
}
/** recarrega a página para exibir uma das tabelas-base */
function Mostrar(num) {
	var F = document.getElementById('frmMnu');
	var tabela = '';
	switch (num) {
		case 1: tabela = 'esp';break;
		case 2: tabela = 'tax';break;
		case 3: tabela = 'loc';break;
		case 4: tabela = 'key';break;
		case 5: tabela = 'pess';break;
		case 6: tabela = 'hab';break;
		case 7: tabela = 'bib';break;
		case 8: tabela = 'frm';break;
		case 9: tabela = 'pl';break;
		case 10:tabela = 'herb';break;
		case 11:tabela = 'prj';break;
		case 12:tabela = 'relat';break;
		case 13:tabela = 'am';break;
		case 14:tabela = 'val';break;
	}
	if (tabela != '') {
		var offset = document.getElementById('hidOffset');
		offset.value = 0; // cada tabela deve ser mostrada do início
		addHidden(F,'table',tabela);
		addHidden(F,'sort','id');
		F.submit();
	}
}
function exporta(table) { /** exporta linhas selecionadas para arquivo CSV */
	window.open('getTable.php?export=true&table='+table);
}
var lastChkClicked = null; // Permite usar o shift para selecionar várias linhas da tabela
function chkClick(who,e,table) { // quando alguém seleciona uma ou mais linhas da tabela
	var multi=false, mark='', unmark='';
	if (e.shiftKey && lastChkClicked != null) {
		var chk = document.getElementsByTagName('input');
		var i, chks='', id, passouLast=false, passouClick=false;
		for (i=0; i<chk.length; i++) {
			if (chk[i].type == 'checkbox') {
				if (chk[i] == lastChkClicked) {
					passouLast = true; // ao longo do for, aqui passa por lastChkClicked
				} else
				if (chk[i] == who) {
					passouClick = true; // ao longo do for, aqui passa pelo chk clicado
					if (who.checked) {
						mark = mark+who.name.substr(3)+',';
					} else {
						unmark = unmark+who.name.substr(3)+',';
					}
				} else
				if (passouClick && !passouLast || passouLast && !passouClick) { // se está entre os dois...
					chk[i].checked = !chk[i].checked; // ...inverte a seleção
					if (chk[i].checked) {
						mark = mark+chk[i].name.substr(3)+',';
					} else {
						unmark = unmark+chk[i].name.substr(3)+',';
					}
					multi = true;
				}
			}
		}
		if (mark != '') {
			mark = mark.substr(0,mark.length-1);
		}
		if (unmark != '') {
			unmark = unmark.substr(0,unmark.length-1);
		}
	}
	divUpd = 'divMsg';
	var url;
	if (multi) {
		url = 'markTable.php?table='+table+'&mark='+mark+'&unmark='+unmark;
	} else {
		var id = who.name.substr(3);
		if (who.checked) {
			url = 'markTable.php?table='+table+'&mark='+id;
		} else {
			url = 'markTable.php?table='+table+'&unmark='+id;
		}
	}
	conecta(url,update1);
	lastChkClicked = who;
}
/** capta cliques em diferentes áreas da janela, para selecionar colunas ou fechar o respectivo menu
	(habilitado com um clique do botão direito do mouse sobre o cabeçalho das tabelas-síntese) */
window.onclick = function(e) {
	var colsStd2 = '';
	var table = document.getElementById('hidTable').value;
	var div = document.getElementById('divMnuTable');
	if (div != null) {
		var opts = div.getElementsByTagName('input');
		var i;
		for (i=0; i<opts.length; i++) {
			if (opts[i].checked) {
				colsStd2 = colsStd2+'S,';
			} else {
				colsStd2 = colsStd2+'N,';
			}
		}
		colsStd2 = colsStd2.substr(0,colsStd2.length-1); // tira a última vírgula
		var aDiv = ancestorDiv(e.target);
		if ((aDiv === null || aDiv.id != 'divMnuTable') &&
			e.target.id != 'btnSelect' && table != 'none' && div.style.display == 'block') {
			if (div.name == 'divCols' && colsStd != colsStd2) {
				// salva as colunas visíveis e recarrega a página
				divUpd = 'divMnuTable';
				var els = div.getElementsByTagName('input');
				var i, el, cols='', vals='';
				for (i=0; i<els.length; i++) {
					el = els[i];
					if (el.type == 'checkbox') {
						cols = cols+el.id.substr(3)+',';
						if (el.checked) {
							vals = vals+"'S',";
						} else {
							vals = vals+"'N',";
						}
					}
				}
				cols = cols.substr(0,cols.length-1); // tira as vírgulas
				vals = vals.substr(0,vals.length-1);
				var url = 'markCols.php?table='+table+'&cols='+cols+'&vals='+vals; // seleciona apenas os filtrados
				conecta(url,update2);
			} else {
				// esconde o menu se clicar fora dele (div) e dos seus checkboxes (ancestor = div) e do btnSelect (*)
				div.style.display = 'none';
			}
		}
	}
}
/** adiciona ou remove itens da seleção */
function add2sel(table,mark,s) {
	var filtros = document.getElementsByTagName('input');
	var i, name, value, txt='';
	for (i=0; i<filtros.length; i++) {
		if (filtros[i].name.substr(0,9) == 'txtFilter' && filtros[i].value != '' && filtros[i].type != 'hidden') {
			name = filtros[i].name;
			value = filtros[i].value;
			if (txt == '') {
				txt = name+'='+value;
			} else {
				txt = txt+'&'+name+'='+value;
			}
		}
	}
	if (mark == 'showMark') {
		divUpd = 'divTable';
	} else {
		divUpd = 'divMsg';
	}
	if (txt != '') {
		if (s != undefined) {
			var url = 'getTable.php?table='+table+'&sort2='+s+'&mark='+mark+'&'+txt; // (des-)seleciona apenas os filtrados
		} else {
			var url = 'getTable.php?table='+table+'&mark='+mark+'&'+txt; // (des-)seleciona apenas os filtrados
		}
	} else {
		if (s != undefined) {
			var url = 'getTable.php?table='+table+'&sort2='+s+'&mark='+mark; // (des-)seleciona toda a tabela?
		} else {
			var url = 'getTable.php?table='+table+'&mark='+mark; // (des-)seleciona toda a tabela?
		}
	}
	if (mark == 'showMark') {
		var div = document.getElementById('divMnuTable');
		div.style.display = 'none';
		conecta(url,update);
	} else {
		conecta(url,update2);
	}
}
/** salva linhas selecionadas como filtro */
function saveAsFilter(table) {
	var name;
	do {
		name = prompt('Dê um nome para o filtro:','');
		if (name == '') {
			alert('O nome é obrigatório.');
		}
	} while (name == '');
	if (name != null) {
		divUpd = 'divMsg';
		var url = 'saveFilter.php?name='+name+'&table='+table;
		var div = document.getElementById('divMnuTable');
		div.style.display = 'none';
		conecta(url,update4);
	}
}
/** mostra menu de seleção/filtro/etc
	(quando clica no [*] no início da segunda linha da tabela) */
function mnuSelect(e,rowcount,table,s) {
	e = e || window.event;
	var docEl = document.documentElement;
	var scrollLeft = docEl.scrollLeft || document.body.scrollLeft;
	var scrollTop  = docEl.scrollTop || document.body.scrollTop;
	var x = e.pageX || (e.clientX  + scrollLeft);
	var y = e.pageY || (e.clientY  + scrollTop);

	var div = document.getElementById('divMnuTable');
	var btn = document.getElementById('btnExport');
	if (!btn.disabled) {
		div.innerHTML = "<fieldset><legend>Filtro</legend><a href='javascript:add2sel(\""+table+"\",\"mark\")'>Adicionar estes "+rowcount+" itens à marcação</a><BR>"+
			"<a href='javascript:add2sel(\""+table+"\",\"unmark\")'>Remover estes "+rowcount+" itens da marcação</a><BR>"+
			"<a href='javascript:saveAsFilter(\""+table+"\")'>Salvar marcados como filtro</a><BR>"+
			"<a href='javascript:add2sel(\""+table+"\",\"showMark\",\""+s+"\")'>Mostrar apenas registros marcados</a><BR>"+
			"<a href='javascript:add2sel(\""+table+"\",\"unmarkAll\")'>Desmarcar tudo</a></fieldset>";
	} else { // colore de cinza os campos indisponíveis se não tiver nenhum registro marcado
		div.innerHTML = "<fieldset><legend>Filtro</legend><a href='javascript:add2sel(\""+table+"\",\"mark\")'>Adicionar estes "+rowcount+" itens à marcação</a><BR>"+
			"<span style='color:gray'>Remover estes "+rowcount+" itens da marcação<BR>"+
			"Salvar marcados como filtro<BR>"+
			"Mostrar apenas registros marcados<BR>"+
			"Desmarcar tudo</span></fieldset>";
	}
	div.style.left = x+'px';
	div.style.top = y+'px';
	div.name = 'divSelect';
	div.style.display = 'block';
}
/** mostra menu (botão direito do mouse sobre o cabeçalho das tabelas-síntese) */
function showMenu(e,table) {
	if (['checklist','especimenes','plantas','locais','locais2'].indexOf(table) < 0) {
		return false; // só mostra menu para as tabelas principais (visíveis pelos usuários comuns)
	}
	e = e || window.event;
	var docEl = document.documentElement;
	var scrollLeft = docEl.scrollLeft || document.body.scrollLeft;
	var scrollTop  = docEl.scrollTop || document.body.scrollTop;
	xUpd3 = e.pageX || (e.clientX  + scrollLeft);
	yUpd3 = e.pageY || (e.clientY  + scrollTop);
	//var div = document.getElementById('divMnuTable');

	divUpd = 'divMnuTable';
	var url = 'getTable.php?table='+table+'&onlycols=true';
	conecta(url,update3);
}
function corKeyUp(e) {
	if (e.keyCode == 13) { // Enter
		var F = document.frmCor;
		F.submit();
	}
}
/** usado em row1MouseDown() e row1MouseMove(), abaixo */
function getMousePos(table, evt) {
	var rect = table.getBoundingClientRect();
	return {
		x: evt.clientX - rect.left,
		y: evt.clientY - rect.top
	};
}
var row1x=null, row1col=null, row1colW=null;
/** seleciona coluna para redimensionar */
function row1MouseDown(e) {
	if (row1x == null) {
		var table = document.getElementById('tblHead');
		var pos = getMousePos(table,e);
		var N = table.rows[0].cells.length;
		var gap = 5;
		var i, w, ww=0;
		for (i=0; i<N; i++) {
			w = table.rows[0].cells[i].offsetWidth;
			ww += w;
			if ((pos.x > ww-gap) && (pos.x < ww+gap)) {
				row1x = pos.x;
				row1col = i;
				row1colW = table.rows[0].cells[i].offsetWidth;
				//alert(i);
			}
		}
	}
}
/** para de redimensionar coluna */
function row1MouseUp(e) {
	row1x = null;
	row1col = null;
	row1colW = null;
}
/** redimensiona coluna (COLOCAR DENTRO DE DIV (já está?) E TENTAR MUDAR O COMPRIMENTO) */
function row1MouseMove(e) {
	var table = document.getElementById('tblHead');
	var tblBody = document.getElementById('tblBody');
	var divTBody = document.getElementById('divTBody');
	if (table != null && tblBody != null) {
		var pos = getMousePos(table,e);
		var gap = 5;
		var i, w, ww=0;
		var N = table.rows[0].cells.length;
		if (row1x == null) {
			//var row1 = document.getElementById('tblHead');
			//row1.style.cursor = 'default';
			table.style.cursor = 'default';
			for (i=0; i<N; i++) {
				w = table.rows[0].cells[i].offsetWidth;
				ww += w;
				if ((pos.x > ww-gap) && (pos.x < ww+gap)) {
					table.style.cursor = 'ew-resize';
				}
			}
		} else {
			var width = row1colW - row1x + pos.x;
			table.rows[0].cells[row1col].style.width = width + 'px';
			tblBody.rows[0].cells[row1col].style.width = width + 'px';
			for (i=0; i<N; i++) {
				if (i == row1col) {
					ww += width;
				} else {
					ww += table.rows[0].cells[i].offsetWidth;
				}
			}
			table.style.width = ww + 'px';
			//tblBody.style.width = ww + 'px';
			divTBody.style.width = ww + 'px';
		}
	}
	//e.preventDefault(); NÃO FUNCIONA! como evitar que selecione espaço abaixo de Img ??
}
/** recarrega a página, mostrando aquela tabela síntese ou filtro */
function submitTable(tab) {
	var F = document.getElementById('frmMnu');
	var offset = document.getElementById('hidOffset');
	offset.value = 0; // cada tabela deve ser mostrada do início
	addHidden(F,'table',tab);
	addHidden(F,'sort','id');
	F.submit();
}
// Arguments :
//  target : an optional opening target (a name, or "_blank"), defaults to "_self"
/*function openPost(url, data, target) {
	var form = document.createElement("form");
	form.action = url;
	form.method = 'POST';
	form.target = target || "_self";
	if (data) {
		for (var key in data) {
			var input = document.createElement("textarea");
			input.name = key;
			input.value = typeof data[key] === "object" ? JSON.stringify(data[key]) : data[key];
			form.appendChild(input);
		}
	}
	form.style.display = 'none';
	document.body.appendChild(form);
	form.submit();
}*/
var xmlhttp;
function updateXML() {
	if (xmlhttp.readyState == 4) {
		if (xmlhttp.status == 200) {
			//console.log('chegou');
			//console.log(xmlhttp.responseText);
			var div = document.getElementById(divUpd);
			div.style.fontSize = '14px';
			div.innerHTML = xmlhttp.responseText;
		} else {
			alert("Erro: " + xmlhttp.statusText);
		}
	}
}
/** envia um arquivo XML (GPX) para o servidor */
function send_xml_data_to_server(xml,url) {
	xmlhttp = new XMLHttpRequest();
	xmlhttp.onreadystatechange = updateXML;
	xmlhttp.open("POST", url, true);
	xmlhttp.setRequestHeader('Content-Type', 'text/xml');
	xmlhttp.send(xml);
	divUpd = 'divMsg';
	//console.log('enviou');
}
/** importa um arquivo de GPS */
function uploadGPS(who) {
	var F = who.files[0];
	if (F) {
		//alert('GPS: '+F.name+','+F.size+','+F.type+','+F.lastModified);
		//alert(F.name+': '+F.size+' bytes');
		var reader = new FileReader();
		reader.readAsText(F,'UTF-8');
		reader.onload = function (e) {
			//var parser = new DOMParser();
			send_xml_data_to_server(e.target.result,'uploadXML.php');
			/*var xml = parser.parseFromString(e.target.result,'text/xml');
			var i, wpts, wpt, lat, lon, alt, time, name;
			wpts = xml.getElementsByTagName('wpt');
			for (i=0; i<wpts.length; i++) {
				wpt = wpts[i];
				lat = wpt.attributes.lat.value;
				lon = wpt.attributes.lon.value;
				alt = wpt.getElementsByTagName('ele')[0].innerHTML;
				time = new Date(wpt.getElementsByTagName('time')[0].innerHTML);
				time = time.getFullYear()+'-'+(time.getMonth()+1)+'-'+time.getDate()+' '+
					time.getHours()+':'+time.getMinutes()+' GMT'+
					(time.getTimezoneOffset()>0?'':'+')+(-time.getTimezoneOffset()/60);
				name = wpt.getElementsByTagName('name')[0].innerHTML;
			}*/
		}
		reader.onerror = function (e) {
			alert('Erro lendo arquivo "'+F.name+'" ('+F.size+' bytes)');
		}
	}
}
/*function submitForm(formId) {
	newDialog = window.open('addcsv.php', "_form");
	document.forms[formId].target='_form';
	document.forms[formId].submit();
	return false;
}*/
/** importa um arquivo CSV */
function uploadCSV(who) {
	var form = document.getElementById('frmCSV');
	form.submit();
/*	var F = who.files[0];
	if (F) {
		var reader = new FileReader();
		reader.readAsText(F,'UTF-8');
		reader.onload = function (e) {
			//send_xml_data_to_server(e.target.result,'addcsv.php?fname='+F.name);
		}
		reader.onerror = function (e) {
			alert('Erro lendo arquivo "'+F.name+'" ('+F.size+' bytes)');
		}
	}*/
}
/** recarrega a página, mostrando aquela tabela base ou outra janela */
function btnClick(e,who) {
	if (who == 'gps') {
		document.getElementById('filGPS').click();
	} else {
		if (who == 'csv') {
			document.getElementById('filCSV').click();
		} else {
			if (who == 'adm') {
				callAdd('adm.php',800,0,1,1);
			} else {
				if (e.ctrlKey || who == 'msg') {
					var F = document.getElementById('frmMnu');
					var offset = document.getElementById('hidOffset');
					offset.value = 0; // cada tabela deve ser mostrada do início
					addHidden(F,'table',who);
					if (who != 'msg') {
						addHidden(F,'sort','id');
					} else {
						addHidden(F,'sort','thread,adddate');
					}
					F.submit();
				} else {
					if (who=='devtools') {
						callAdd('devtools.php',800,0,1,1);
					} else {
						if (who=='help') {
						callAdd('docs.html',800,0,1,1);
						} else {
								callAdd('add'+who.substr(0,1).toUpperCase()+who.substr(1)+'.php',800,0,1,1);
						}
					}
				}
			}
		}
	}
}
/** +micClick/+replyMsg = resultado do envio da mensagem */
/*function updateMsg() {
    if (HttpReq.readyState == 4) {
		if (HttpReq.status == 200) {
			if (HttpReq.responseText == '') {
				alert('Obrigado. Sua mensagem foi enviada.');
			} else {
				alert('Erro! '+HttpReq.responseText);
			}
		} else {
            alert("Erro: " + HttpReq.statusText);
		}
    }
}*/
/** envia mensagem pro administrador (ou outro usuário - FUTURAMENTE) */
/*function micClick() {
	var msg = prompt('Escreva uma mensagem para a equipe de desenvolvimento:');
	if (msg != '' && msg != null) { // '' se clicar OK, nulo se clicar Cancel
		var url = 'sendMsg.php?msg='+msg;
		conecta(url,updateMsg);
	}
}*/
/** responde a uma mensagem recebida */
function replyMsg(thread,replyto) {
	//alert(thread);
	var msg = prompt('Escreva sua resposta:');
	if (msg != '' && msg != null) { // '' se clicar OK, nulo se clicar Cancel
		var url = 'sendMsg.php?msg='+msg+'&thread='+thread+'&replyto='+replyto;
		conecta(url,updateMsg);
	}
}
/** visualiza um filtro, no lugar das tabelas normais (base e síntese) */
function selFiltroChange(who) {
	submitTable('filter:'+who.value);
}
/** ...até animResize() = funções para animação/redimensionamento/update da janela
	(principalmente divs dentro de divs para fazer scroll em table-body) */
var latestKnownScrollX=0, ticking=false,
		latestKnownInnerW=0, latestKnownInnerH=0;
function fbodyScroll(who) {
	latestKnownScrollX = who.scrollLeft;
	requestTick(1);
}
function bodyResize() {
	latestKnownInnerW = window.innerWidth;
	latestKnownInnerH = window.innerHeight;
	requestTick(2);
}
function requestTick(n) {
	if (!ticking) {
		if (n == 1) {
			requestAnimationFrame(animUpd);
		} else {
			requestAnimationFrame(animResize);
		}
	}
	ticking = true;
}
function animUpd() {
	ticking = false; // reset the tick so we can capture the next onScroll
	var currentScrollX = latestKnownScrollX;
	var div = document.getElementById('divFundoHead');
	div.scrollLeft = currentScrollX;
}
function animResize() {
	ticking = false; // reset the tick so we can capture the next onScroll
	var currentInnerW = latestKnownInnerW;
	var currentInnerH = latestKnownInnerH;
	// pega as divs e suas alturas
	var divTable = document.getElementById('divTable');
	if (divTable != null) {
		var divMnuH = document.getElementById('divMnu').clientHeight;
		var divFundo = document.getElementById('divFundo');
		var divMain = document.getElementById('divMain');
		var divText = document.getElementById('divText');
		var divFoot = document.getElementById('divFoot');
		var divTHead = document.getElementById('divTHead');
		var divTBody = document.getElementById('divTBody');
		var divFBody = document.getElementById('divFundoBody');
		var tblHead = document.getElementById('tblHead');
		var tblBody = document.getElementById('tblBody');
		var divTextH = divText.clientHeight;
		var divTableH = divTable.clientHeight;
		var divFootH = divFoot.clientHeight;
		var divTHeadH = divTHead.clientHeight;
		var divTHeadW = divTHead.clientWidth;
		var divTBodyH = divTBody.clientHeight;
		var tblBodyH = tblBody.offsetHeight;

		// muda as alturas e comprimentos
		divFundo.style.height = (currentInnerH-divMnuH)+'px'; // -4 = BORDA 2
		divMain.style.height = (currentInnerH-divMnuH)+'px'; // -8 = 2*BORDA 2
		divTable.style.height = (currentInnerH-divMnuH-divTextH-divFootH)+'px'; // -20 = 5*BORDA 2
		divFBody.style.height = (currentInnerH-divMnuH-divTextH-divFootH-divTHeadH)+'px'; // -28 = 7*BORDA 2
		divTBody.style.height = (currentInnerH-divMnuH-divTextH-divFootH-divTHeadH)+'px'; // -36 = 9*BORDA 2

		divMain.style.width=(currentInnerW)+'px'; // -8
		divFundo.style.width=(currentInnerW)+'px'; // -4
		divTable.style.width=(currentInnerW)+'px'; // -12
		divTable.style.height=(currentInnerH-divTextH-divMnuH-divFootH)+'px'; // -12
		divFBody.style.height=(currentInnerH-divTextH-divMnuH-divFootH-divTHeadH)+'px'; // -16
		divFBody.style.width=(currentInnerW)+'px'; // -12

		// ajusta as colunas
		var soma1=0,soma2=0, i;
		var row1 = document.getElementById('tr1Main');		// thead
		var row2 = tblBody.getElementsByTagName('tr')[0];	// tbody
		var tds1 = row1.getElementsByTagName('td');
		var tds2 = row2.getElementsByTagName('td');
		divTBody.style.width='4000px'; // WHICH MAX TO USE ??
		divTHead.style.width='4000px';
		for (i=0; i<tds1.length; i++) {
			if (tds1[i].offsetWidth > tds2[i].offsetWidth) {
				tds2[i].style.width = (tds1[i].clientWidth-2)+'px';
			} else {
				tds1[i].style.width = (tds2[i].clientWidth-2)+'px';
			}
		}
		
		divTBody.style.width=document.getElementById('tblBody').clientWidth+'px';
		divTBody.style.height=document.getElementById('tblBody').clientHeight+'px';
		divTHead.style.width=(document.getElementById('tblHead').clientWidth+30)+'px';
	}
}
/** mostra campo de query sql (apenas para usuários avançados/admin) */
function promptQuery() {
	var div = document.getElementById('divQry');
	div.style.visibility = 'visible';
	var divO = document.getElementById('divOverlay');
	divO.style.visibility = 'visible';
}
/** verifica se a query não exclui nada */
function editQry() {
	var b = document.getElementById('btnQry');
	var q = document.getElementById('txaQry').value;
	if (q == '' ||
		q.toLowerCase().indexOf('drop') >= 0 ||
		q.toLowerCase().indexOf('delete') >= 0 ||
		q.toLowerCase().indexOf('truncate') >= 0 ||
		q.toLowerCase().indexOf('use') >= 0 // para que este ??
	) {
		b.disabled = true;
	} else {
		b.disabled = false;
	}
}
/** submete a query */
function Query() {
	var q = document.getElementById('txaQry').value;
	var F = document.getElementById('frmQry');
	addHidden(F,'qry',q);
	F.submit();
}
/** cancela a query */
function qryCancel() {
	var div = document.getElementById('divQry');
	div.style.visibility = 'hidden';
	var divO = document.getElementById('divOverlay');
	divO.style.visibility = 'hidden';
}
/** abre um mapa com os registros especificados (tudo de um tax ou loc, ou apenas 1 lat/lon) */
function mapSee(lat,lon,loc,tax) {
	//alert(lat+','+lon+','+loc);
	var memi = 0;
	if (tax != null) {
		window.open('map.php?tax='+tax+'&mesomicro='+memi,'map.php');
	} else
	if (lat != null && lon != null) {
		window.open('map.php?lat='+lat+'&lon='+lon+'&mesomicro='+memi,'map.php');
	} else {
		window.open('map.php?loc='+loc+'&mesomicro='+memi,'map.php');
	}
}
</script>
<link rel="stylesheet" type="text/css" href="css/cssDuckeWiki.css">
<?php
pullCfg();
echo "</head>
<body onMouseMove='row1MouseMove(event)' onMouseUp='row1MouseUp(event)' onresize='bodyResize()' onload='bodyResize()'>";
$loginErro = login_error($conn);
if ($loginErro) {
	die("<p>
	<span class='error'>Você não tem autorização de acesso a esta página.</span> Por favor <a href='index.php'>faça o login</a>.
	</p>");
}
if (!file_exists('usr/'.$_SESSION['user_id'].'/mark')) {
	if (mkdir('usr/'.$_SESSION['user_id'].'/mark',0755,true)) {
		//echo "pasta criada";
	} else {
		//echo "pasta não criada";
	}
}
if (!file_exists('usr/'.$_SESSION['user_id'].'/filter')) {
	if (mkdir('usr/'.$_SESSION['user_id'].'/filter',0755,true)) {
		//echo "pasta criada";
	} else {
		//echo "pasta não criada";
	}
}
///////////////////////////////////////////////////////////	
// divMnu - MENU
///////////////////////////////////////////////////////////	
echo "<div id='divMnu' style='background-color:#".$_SESSION['cfg.corbutbar']."'>";
// título - marrom escuro
//echo "<div id='divmenu' style='background-color:#".$_SESSION['cfg.corbutbar']."'>
echo "<table id='tblMnu'>";
//echo "<tr id='trMnu' style='background-color:#".$_SESSION['cfg.corbutbar']."'>";
echo "<tr id='trMnu'>";
echo "<td id='tdMnuMic' style='background-color:#".$_SESSION['cfg.cortit']."'>
	<button type='button' onclick='micClick()' title='Comunicar bug, dúvida ou sugestão'><img src='icon/mic.png'></button></td>";
echo "<td id='tdMnuTit' style='width:200px;background-color:#".$_SESSION['cfg.cortit']."'>
	<span style='text-align:center;font-size:20px'>".txt('title')."<span style='font-size:14px'> <a href='docs.html' target='_blank' style='color:black'>".txt('doc')."</a></span></span><BR>\n";
	echo txt('usr').': '.htmlentities($_SESSION['username'])." [id ".$_SESSION['user_id']."]<BR><a href='logout.php'>(".txt('logout').")</a>\n";
	echo "<input type='hidden' name='lang' value='$lang' />";
	echo "<input type='hidden' id='hidOffset' name='offset' value='$offset' />";
	echo "<input type='hidden' name='limit' value='$limit' /></td>\n";
// botões - marrom claro
$l = 16;
echo "<td id='tdMnuBut' style='width:1000px;background-color:#".$_SESSION['cfg.corbutbar']."'>\n";
//echo "<td id='tdMnuBut' style='width:1000px;background-color:red'>\n";
echo "<form id='frmMnu' name='frmMnu' method='get' action=''>\n";
echo "<table id='tblBut'><tr style='background-color:rgba(0,0,0,0)'><td>";
	$stdCor = 'white';
	$corBG = $_SESSION['cfg.corbut'];
	$r = hexdec(substr($corBG,0,2));
	$g = hexdec(substr($corBG,2,2));
	$b = hexdec(substr($corBG,4,2));
	$corBG = "rgba($r,$g,$b,0.5)";
	//echo $corBG;
	$kit = 'cor';
	if ($table == 'esp') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu1' style='float:left'><button style='$corbg' title='Adicionar especímene (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"esp\")'><img src='icon16/$kit/esp.png' height=$l width=$l></button></div>\n";
	if ($table == 'pl') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu9' style='float:left'><button style='$corbg' title='Adicionar planta marcada (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"pl\")'><img src='icon16/$kit/pl.png' height=$l width=$l></button></div>\n";
	if ($table == 'am') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu13' style='float:left'><button style='$corbg' title='Adicionar amostra (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"am\")'><img src='icon16/$kit/oil.png' height=$l width=$l></button></div>\n";
	if ($table == 'tax') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu2' style='float:left'><button style='$corbg' title='Adicionar táxon (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"tax\")'><img src='icon16/$kit/tax.png' height=$l width=$l></button></div>\n";
	if ($table == 'loc') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu3' style='float:left'><button style='$corbg' title='Adicionar localidade (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"loc\")'><img src='icon16/$kit/loc.png' height=$l width=$l></button></div>\n";
	if ($table == 'key') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu4' style='float:left'><button style='$corbg' title='Adicionar variável (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"key\")'><img src='icon16/$kit/key.png' height=$l width=$l></button></div>\n";
	if ($table == 'val') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu14' style='float:left'><button style='$corbg' title='Adicionar categoria de variável (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"val\")'><img src='icon16/$kit/categ.png' height=$l width=$l></button></div>\n";
	if ($table == 'pess') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu5' style='float:left'><button style='$corbg' title='Adicionar pessoa (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"pess\")'><img src='icon16/$kit/pess.png' height=$l width=$l></button></div>\n";
	if ($table == 'hab') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu6' style='float:left'><button style='$corbg' title='Adicionar hábitat (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"hab\")'><img src='icon16/$kit/hab.png' height=$l width=$l></button></div>\n";
	if ($table == 'bib') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu7' style='float:left'><button style='$corbg' title='Adicionar referência bibliográfica (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"bib\")'><img src='icon16/$kit/bib.png' height=$l width=$l></button></div>\n";
	if ($table == 'frm') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu8' style='float:left'><button style='$corbg' title='Adicionar formulário (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"frm\")'><img src='icon16/$kit/frm.png' height=$l width=$l></button></div>\n";
	if ($table == 'herb') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu10' style='float:left'><button style='$corbg' title='Adicionar herbário (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"herb\")'><img src='icon16/$kit/herb.png' height=$l width=$l></button></div>\n";
	if ($table == 'prj') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu11' style='float:left'><button style='$corbg' title='Adicionar projeto (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"prj\")'><img src='icon16/$kit/prj.png' height=$l width=$l></button></div>\n";
	if ($table == 'relat') { $corbg = "background-color:$stdCor"; } else { $corbg = "background-color:$corBG"; }
	echo "<div contextmenu='mnu12' style='float:left'><button style='$corbg' title='Adicionar relatório (ctrl+click para ver a tabela)' class='menu' type='button' onclick='btnClick(event,\"relat\")'><img src='icon16/$kit/relat.png' height=$l width=$l></button></div>\n";

	//echo "<button style='$corbg' title='Relatórios' class='menu' type='button' onclick='callAdd(\"relat.php\",800,0,0,1)'><img src='icon16/$kit/relat.png' height=$l width=$l></button>\n";

	echo "</td><td style='width:10%'></td><td>"; // espaço entre botões de formulários e os outros
	$corbg = "background-color:$corBG";
	echo "<button style='$corbg' title='Início' class='menu' type='submit' name='table' value='tables'><img src='icon16/$kit/home.png' height=$l width=$l></button>\n";
	echo "<button style='$corbg' title='Configurações' class='menu' type='button' onclick='callAdd(\"config.php\",800,0,0,0)'><img src='icon16/$kit/cfg.png' height=$l width=$l></button>\n";
	echo "<button style='$corbg' title='Imagens' class='menu' type='button' onclick='callAdd(\"img.php\",1000,0,0,1)'><img src='icon16/$kit/img.png' height=$l width=$l></button>\n";
	$q = "select count(*) from msg
	where msgto = ".$_SESSION['user_id']." and lida = 'N'";
	$res = pg_query($conn,$q);
	if ($res) {
		if ($row = pg_fetch_array($res,NULL,PGSQL_NUM)) {
			if ($row[0] > 0) {
				echo "<button style='background:#F44' title='Ler mensagens' class='menu' type='button' onclick='btnClick(event,\"msg\")'>msg ($row[0])</button>\n";
			} else {
				echo "<button style='$corbg' title='Ler mensagens' class='menu' type='button' onclick='btnClick(event,\"msg\")'>msg</button>\n";
			}
		}
	}
	echo "<input type='file' id='filGPS' style='display:none' onchange='uploadGPS(this)'>";
	echo "<button style='$corbg' title='Importar arquivo de GPS' class='menu' type='button' onclick='btnClick(event,\"gps\")'>GPS</button>\n";
	echo "<button style='$corbg' title='Importar arquivo CSV' class='menu' type='button' onclick='btnClick(event,\"csv\")'>CSV</button>\n";
	if ($_SESSION['user_id'] == $dev_userid) {
		echo "<button style='$corbg' title='Ferramentas administrativas' class='menu' type='button' onclick='btnClick(event,\"adm\")'>adm</button>\n";
		echo "<button style='$corbg' title='Query' class='menu' type='button' onclick='promptQuery()'>qry</button>";
		echo "<br /><button style='$corbg' title='doc1' class='menu' type='button' onclick='btnClick(event,\"devtools\")' >devtools</button>";
		echo "<button style='$corbg' title='doc2' class='menu' type='button' onclick='btnClick(event,\"help\")' >doc</button>";
	}
	echo "</td></tr><tr style='background-color:rgba(0,0,0,0)'><td colspan=3>";
	//echo "<BR>\n";
	$tabelas = ['checklist','especimenes','plantas','locais','locais2'];
	foreach ($tabelas as $tabela) {
		if ($table == $tabela) {
			echo "<button type='button' onclick='submitTable(\"$tabela\")'><strong>".txt($tabela)."</strong></button>\n";
		} else {
			echo "<button type='button' onclick='submitTable(\"$tabela\")'>".txt($tabela)."</button>\n";
		}
	}
	$dirname = './usr/'.$_SESSION['user_id'].'/filter/';
	$dir1 = glob($dirname.'*'); # all filters available
	if (sizeof($dir1) > 0) {
		echo "<select id='selFiltro' onchange='selFiltroChange(this)'>";
		echo "<option value=0>-- Filtros --</option>";
		foreach ($dir1 as $fname) {
			$fname = substr($fname,strlen($dirname));
			if ($table == "filter:$fname") {
				echo "<option selected>$fname</option>";
			} else {
				echo "<option>$fname</option>";
			}
		}
		echo "</select>";
	}
echo "</td></tr></table>";
echo "</form></td>";
//echo "</td></tr></table></div></form>\n";
echo "</tr></table>\n";
echo "</div>"; // divMnu
//echo "<form id='frmCSV' method='POST' target='addCSV' action='addcsv.php' onsubmit=\"window.open('about:blank','addCSV')\">";
//echo "<form id='frmCSV' method='POST' action='addcsv.php' onsubmit='return submitForm(this)'>";
echo "<form id='frmCSV' method='POST' action='addcsv.php' target='_blank' enctype='multipart/form-data'>";
echo "<input type='file' id='filCSV' name='filCSV' style='display:none' onchange='uploadCSV(this)' accept='.csv,.txt'></form>";
// divMnu
///////////////////////////////////////////////////////////	
// divMain - texto/descrição + TABELA + rodapé (botões)
///////////////////////////////////////////////////////////	
echo "<div id='divFundo'>\n";
echo "<div id='divMain'>\n";

echo "<input id='hidTable' type='hidden' name='table' value='$table' />";
echo "<input type='hidden' name='lang' value='$lang' />\n";
echo "<input type='hidden' name='offset' value='$offset' />";
echo "<input type='hidden' name='limit' value='$limit' />\n";

if (isset($_POST['qry'])) {
	$qry = $_POST['qry'];
	include("getTable.php");
	//echo "$qry<BR><BR>";
} else {
	include("getTable.php");
}
//echo "</div>";
//echo "</form></div>\n"; // /form?
// divTable
///////////////////////////////////////////////////////////	
if ($mostrar && (in_array($table,$tabelas) || in_array($table,['esp','pl','tax','loc','key','pess','hab','bib','frm','herb','prj','msg','relat','am','val']))) {
	// divs flutuantes
	//echo "<div id='divExport' style='display:block'></div>"; // NÃO ESTÁ USANDO?
	///////////////////////////////////////////////////////////	
	// formOffset - BOTÃO DE OFFSET
	///////////////////////////////////////////////////////////	
	//echo "<div style='float:left'>"; // ID??
	echo "<div id='divFoot'>";
	echo "<table id='tblFoot'><tr style='background-color:rgba(0,0,0,0)'>";
	echo "<td>";
	echo "<button type='button' id='btnExport' onclick='exporta(\"$table\")'";
	if ($selCount < 1) {
		echo " disabled";
	}
	echo ">Exportar <span id='spnSelCount'>$selCount selecionados</span></button></td>\n";
	echo "<td><form id='frmOffset'>\n";
	echo "<input type='hidden' name='table' value='$table' />";
	echo "<input type='hidden' name='lang' value='$lang' />";
	echo "<input type='hidden' name='limit' value='$limit' />";
	if ($sort != 'none') {
		echo "<input type='hidden' name='sort' value='$sort' />";
	}
	foreach($filtros as $key => $value) {
		echo "<input type='hidden' name='txtFilter$key' value='$value' />";
	}
	echo "<button type='submit' id='btnOffset' name='offset' value='$offset' onclick='return mudaoffset($offset,$rowcount);'>Mostrando: ".($offset+1)." a ".($offset+$limit)." (de $rowcount)</button></td>";
	echo "</form></td>";
	//echo "</div>";
	// formOffset - BOTÃO DE OFFSET
	///////////////////////////////////////////////////////////	
	// formLimit - BOTÃO DE LIMITE
	///////////////////////////////////////////////////////////	
	echo "<td><form id='frmLimit'>";
	echo "<input type='hidden' name='table' value='$table' />";
	echo "<input type='hidden' name='lang' value='$lang' />";
	if ($sort != 'none') {
		echo "<input type='hidden' name='sort' value='$sort' />";
	}
	foreach($filtros as $key => $value) {
		echo "<input type='hidden' name='txtFilter$key' value='$value' />";
	}
	echo "<input type='hidden' name='offset' value='$offset' />";
	echo "<button type='submit' id='btnLimit' name='limit' value='$limit' onclick='return mudalimite($limit,$rowcount);'>Limite: $limit</button>";
	echo "</form></td>";
	// formLimit
	///////////////////////////////////////////////////////////	
	echo "</tr></table>"; // tblFoot
	echo "</div>"; // divFoot
}
echo "</div>"; // divMain
echo "</div>"; // divFundo

echo "<div id='divMsg' style='display:block' class='msg'></div>";
echo "
<div id='divOverlay'>
	<div id='divQry'>
	<form id='frmQry' name='frmQry' method='post' action=''>
		Query:<BR><textarea id='txaQry' style='height:300px' oninput='editQry()'></textarea>
		<button id='btnQry' type='button' onclick='Query()' disabled>Executar</button>
		<button id='btnQryCancel' type='button' onclick='qryCancel()'>Cancelar</button>
	</form>
	</div>
</div>";

///////////////////////////////////////////////////////////	
// frmLang - BARRA DE IDIOMAS
///////////////////////////////////////////////////////////	
echo "<div id='divLang' class='langs'>\n";
echo "<form id='frmLang' name='frmLang' method='get' action=''>\n";
$dir1 = glob('lang/lang_*'); # all languages available
foreach ($dir1 as $fname) {
	if (!strpos($fname,'~')) { // não inclui cópias de segurança
		$sigla = mb_substr($fname,-2,NULL,'UTF-8');
		if ($sigla == $lang) {
			echo "<button type='button' name='lang' value='$sigla' onclick='changeLang(this,\"$table\",\"$sort\",$offset,$limit)'><strong>$sigla</strong></button>\n";
		} else {
			echo "<button type='button' name='lang' value='$sigla' onclick='changeLang(this,\"$table\",\"$sort\",$offset,$limit)'>$sigla</button>\n";
		}
	}
}
echo "</form>";
echo "</div>\n"; // langs
// frmLang
///////////////////////////////////////////////////////////	
?>
<menu type="context" id="mnu1">
  <menuitem label="Mostrar especímenes (Ctrl+Click)" onclick="Mostrar(1)"></menuitem>
</menu>
<menu type="context" id="mnu2">
  <menuitem label="Mostrar taxa (Ctrl+Click)" onclick="Mostrar(2)"></menuitem>
</menu>
<menu type="context" id="mnu3">
  <menuitem label="Mostrar locais (Ctrl+Click)" onclick="Mostrar(3)"></menuitem>
</menu>
<menu type="context" id="mnu4">
  <menuitem label="Mostrar variáveis (Ctrl+Click)" onclick="Mostrar(4)"></menuitem>
</menu>
<menu type="context" id="mnu5">
  <menuitem label="Mostrar pessoas (Ctrl+Click)" onclick="Mostrar(5)"></menuitem>
</menu>
<menu type="context" id="mnu6">
  <menuitem label="Mostrar hábitats (Ctrl+Click)" onclick="Mostrar(6)"></menuitem>
</menu>
<menu type="context" id="mnu7">
  <menuitem label="Mostrar referências bibliográficas (Ctrl+Click)" onclick="Mostrar(7)"></menuitem>
</menu>
<menu type="context" id="mnu8">
  <menuitem label="Mostrar formulários (Ctrl+Click)" onclick="Mostrar(8)"></menuitem>
</menu>
<menu type="context" id="mnu9">
  <menuitem label="Mostrar plantas marcadas (Ctrl+Click)" onclick="Mostrar(9)"></menuitem>
</menu>
<menu type="context" id="mnu10">
  <menuitem label="Mostrar herbários (Ctrl+Click)" onclick="Mostrar(10)"></menuitem>
</menu>
<menu type="context" id="mnu11">
  <menuitem label="Mostrar projetos (Ctrl+Click)" onclick="Mostrar(11)"></menuitem>
</menu>
<menu type="context" id="mnu12">
  <menuitem label="Mostrar relatórios (Ctrl+Click)" onclick="Mostrar(12)"></menuitem>
</menu>
<menu type="context" id="mnu13">
  <menuitem label="Mostrar amostras (Ctrl+Click)" onclick="Mostrar(13)"></menuitem>
</menu>
<menu type="context" id="mnu14">
  <menuitem label="Mostrar categorias de variáveis (Ctrl+Click)" onclick="Mostrar(14)"></menuitem>
</menu>
<div id='divMnuTable' style='display:none' class='mnuTable'></div>
</body>
</html>
